{"version":3,"file":"static/js/248.bad5d0bc.chunk.js","mappings":"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","sources":["views/Beers/beersList.tsx","views/Beers/allBeers.tsx","components/CustomButton.tsx","views/Beers/addBeer.tsx","views/Beers/myBeers.tsx","hooks/useLocalStorage.tsx","views/Beers/index.tsx"],"sourcesContent":["import React from 'react';\n\n// mui imports\nimport { Avatar, Card, CardContent, Fade, Grid, Typography } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport Tooltip, { TooltipProps, tooltipClasses } from '@mui/material/Tooltip';\n\nimport { Beer } from '../../types/beer';\nimport beerImage from '../../assets/images/beer-image.png';\n\nconst CustomWidthTooltip = styled(({ className, ...props }: TooltipProps) => <Tooltip {...props} classes={{ popper: className }} />)({\n    [`& .${tooltipClasses.tooltip}`]: {\n        maxWidth: 120,\n        backgroundColor: 'black'\n    }\n});\n\n// Styled component for the Card\nconst CustomCard = styled(Card)`\n    height: 200;\n    box-shadow: 4px 8px 4px rgb(0, 0, 0, 0.05);\n    cursor: pointer;\n    transition: 0.2s ease;\n\n    &:hover {\n        box-shadow: 0px 0px 0px rgb(0, 0, 0, 0);\n        background-color: rgb(227, 241, 255);\n    }\n`;\n\nconst BeersList = ({ beers }: { beers: Beer[] }) => {\n    return (\n        <Grid container spacing={4}>\n            {beers.map((beer: Beer, index: number) => (\n                <Grid key={index} item xs={12} lg={6}>\n                    <CustomCard>\n                        <CardContent sx={{ paddingLeft: '0px' }}>\n                            <Grid container>\n                                <Grid item xs={2}>\n                                    <CustomWidthTooltip\n                                        title=\"Ingredient: grain, hops, yeast, water\"\n                                        arrow\n                                        TransitionComponent={Fade}\n                                        TransitionProps={{ timeout: 600 }}\n                                        placement=\"top\"\n                                    >\n                                        <Grid display=\"flex\" sx={{ paddingTop: '16px', justifyContent: 'center' }}>\n                                            <Avatar\n                                                alt={`beer-${index}`}\n                                                src={beer.image_url || beerImage}\n                                                variant=\"square\"\n                                                sx={{\n                                                    height: 140,\n                                                    width: 34\n                                                }}\n                                            />\n                                        </Grid>\n                                    </CustomWidthTooltip>\n                                </Grid>\n                                <Grid\n                                    item\n                                    xs={10}\n                                    sx={{\n                                        paddingTop: '14px',\n                                        paddingBottom: '8px'\n                                    }}\n                                >\n                                    <Typography variant=\"h4\" component=\"div\">\n                                        {beer.name}\n                                    </Typography>\n                                    <Typography sx={{ color: 'rgb(211, 169, 86)', marginTop: '6px' }}>{beer.tagline}</Typography>\n                                    <Typography\n                                        sx={{\n                                            marginTop: '6px',\n                                            display: '-webkit-box',\n                                            WebkitBoxOrient: 'vertical',\n                                            WebkitLineClamp: 2,\n                                            overflow: 'hidden',\n                                            textOverflow: 'ellipsis'\n                                        }}\n                                    >\n                                        {beer.description}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </CustomCard>\n                </Grid>\n            ))}\n        </Grid>\n    );\n};\n\nexport default BeersList;\n","import React, { useEffect, useState } from 'react';\n\n// mui imports\nimport { Button, CircularProgress, Grid, Typography } from '@mui/material';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport { Box } from '@mui/system';\n\n// project imports\nimport { Beer } from '../../types/beer';\nimport BeersList from './beersList';\n\nconst AllBeerListPage = () => {\n    const [page, setPage] = useState(1);\n    const [perPage, setPerPage] = useState(10);\n    const [loading, setLoading] = useState(true);\n    const [beers, setBeers] = useState<Beer[]>([]);\n\n    useEffect(() => {\n        fetchAllBeers();\n    }, [page, perPage]);\n\n    const handleLoadMore = (e: any) => {\n        setPage(page + 1);\n    };\n\n    const fetchAllBeers = async () => {\n        try {\n            const response = await fetch(`https://api.punkapi.com/v2/beers?page=${page}&per_page=${perPage}\n            `);\n            const data = await response.json();\n            setBeers([...beers, ...data]);\n            setLoading(false);\n        } catch (error: any) {\n            console.error('Error fetching beer list:', error);\n        }\n    };\n\n    return loading ? (\n        <Box sx={{ display: 'flex' }} className=\"loading\">\n            <CircularProgress />\n        </Box>\n    ) : beers.length ? (\n        <>\n            <BeersList beers={beers} />\n            <Grid display=\"flex\" alignContent=\"center\" justifyContent=\"center\" marginTop=\"12px\">\n                <Button\n                    sx={{\n                        color: '#3687D0',\n                        textTransform: 'none'\n                    }}\n                    onClick={handleLoadMore}\n                >\n                    <Typography>Load More</Typography>\n                    <KeyboardArrowDownIcon />\n                </Button>\n            </Grid>\n        </>\n    ) : null;\n};\n\nexport default AllBeerListPage;\n","import { Button as MuiButton } from '@mui/material';\nimport styled from 'styled-components';\n\nexport const CustomButton = styled(({ ...otherProps }) => <MuiButton {...otherProps} />)`\n    background-color: #0066c3;\n    color: white;\n    text-transform: none;\n    transition: 0.2s ease;\n\n    &:hover {\n        background-color: blue;\n    }\n`;\n","import { useState } from 'react';\nimport { Dialog, DialogTitle, DialogContent, useMediaQuery, useTheme, TextField, DialogActions, Button, Avatar } from '@mui/material';\nimport { CustomButton } from '../../components/CustomButton';\nimport { AddBeerDialogProps, BeerFormValue } from '../../types/beer';\nimport beerImage from '../../assets/images/beer-image.png';\n\nconst AddBeer = (props: AddBeerDialogProps) => {\n    const { onClose, onSubmit, open } = props;\n\n    const [values, setValues] = useState<BeerFormValue>({\n        name: '',\n        tagline: '',\n        description: ''\n    });\n\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const handleClose = (e: any) => {\n        onClose();\n        setValues({});\n    };\n\n    const handleSave = (e: any) => {\n        onSubmit(values);\n        setValues({});\n    };\n\n    const handleValueChange = (e: any) => {\n        setValues({\n            ...values,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    return (\n        <Dialog fullScreen={fullScreen} onClose={handleClose} open={open}>\n            <DialogTitle variant=\"h5\">Add a New Beer</DialogTitle>\n            <DialogContent>\n                <Avatar\n                    alt=\"beer image\"\n                    src={beerImage}\n                    variant=\"square\"\n                    sx={{ width: 100, height: 120, border: '1px solid #d4d4d4', borderRadius: '4px', marginBottom: '4px' }}\n                />\n                <TextField\n                    id=\"name\"\n                    name=\"name\"\n                    label=\"Beer name*\"\n                    variant=\"outlined\"\n                    fullWidth\n                    margin=\"dense\"\n                    value={values.name}\n                    onChange={(e: any) => handleValueChange(e)}\n                />\n                <TextField\n                    id=\"genre\"\n                    name=\"tagline\"\n                    label=\"Genre*\"\n                    variant=\"outlined\"\n                    fullWidth\n                    margin=\"dense\"\n                    value={values.tagline}\n                    onChange={(e: any) => handleValueChange(e)}\n                />\n                <TextField\n                    id=\"description\"\n                    name=\"description\"\n                    label=\"Description*\"\n                    value={values.description}\n                    multiline\n                    rows={4}\n                    fullWidth\n                    onChange={(e: any) => handleValueChange(e)}\n                    sx={{ marginTop: '8px' }}\n                />\n            </DialogContent>\n            <DialogActions sx={{ paddingRight: '24px', paddingBottom: '12px' }}>\n                <Button onClick={handleClose} sx={{ color: 'gray', marginRight: '24px', textTransform: 'none' }}>\n                    Cancel\n                </Button>\n                <CustomButton onClick={handleSave}>Save</CustomButton>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default AddBeer;\n","import React, { useEffect, useState } from 'react';\nimport { Grid, Link, Typography } from '@mui/material';\nimport { Beer } from '../../types/beer';\nimport styled from 'styled-components';\nimport AddBeer from './addBeer';\nimport { CustomButton } from '../../components/CustomButton';\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\nimport BeersList from './beersList';\n\nconst CustomLink = styled(Link)`\n    text-decoration: none;\n    cursor: pointer;\n`;\n\nconst CustomFixedButton = styled(CustomButton)`\n    position: fixed;\n    right: 45px;\n    top: 36px;\n`;\n\nconst MyBeerListPage = () => {\n    const [localBeers, setLocalBeers] = useLocalStorage('myBeers');\n    const [myBeers, setMyBeers] = useState<Beer[]>(localBeers() || []);\n    const [open, setOpen] = React.useState(false);\n\n    useEffect(() => {\n        setLocalBeers(myBeers);\n    }, [setLocalBeers, myBeers]);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleSubmit = (values: any) => {\n        setMyBeers([...myBeers, values]);\n        setOpen(false);\n    };\n\n    return (\n        <Grid sx={{ position: 'relative' }}>\n            <CustomFixedButton onClick={handleClickOpen}>Add a new beer</CustomFixedButton>\n            {myBeers.length ? (\n                <BeersList beers={myBeers} />\n            ) : (\n                <Grid container direction=\"column\" marginTop=\"150px\" alignItems=\"center\">\n                    <Typography>Nothing to see yet.</Typography>\n                    <Typography>\n                        <CustomLink onClick={handleClickOpen}>Click here</CustomLink> to add your first beer!\n                    </Typography>\n                </Grid>\n            )}\n            <AddBeer open={open} onClose={handleClose} onSubmit={handleSubmit} />\n        </Grid>\n    );\n};\n\nexport default MyBeerListPage;\n","export const useLocalStorage = (name: string): Function[] => {\n    const getLocalStorage = () => {\n        const local = localStorage.getItem(name);\n        if (local != null) {\n            return JSON.parse(local);\n        }\n        return null;\n    };\n    const setLocalStorage = (item: Object) => {\n        localStorage.setItem(name, JSON.stringify(item));\n    };\n    const removeLocalStorage = () => {\n        return localStorage.removeItem(name);\n    };\n    return [getLocalStorage, setLocalStorage, removeLocalStorage];\n};\n","import * as React from 'react';\n// material-ui\nimport Box from '@mui/material/Box';\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\nimport AllBeerListPage from './allBeers';\nimport MyBeerListPage from './myBeers';\n\n// ==============================|| BEER LIST PAGE ||============================== //\n\nconst BeerListPage = () => {\n    const [value, setValue] = React.useState('1');\n\n    const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n        setValue(newValue);\n    };\n\n    return (\n        <Box sx={{ width: '100%', typography: 'body1' }}>\n            <TabContext value={value}>\n                <Box sx={{ borderBottom: 1, border: 'none' }}>\n                    <TabList onChange={handleChange} aria-label=\"Beers page\">\n                        <Tab label=\"All Beers\" value=\"1\" />\n                        <Tab label=\"My Beers\" value=\"2\" />\n                    </TabList>\n                </Box>\n                <TabPanel value=\"1\">\n                    <AllBeerListPage />\n                </TabPanel>\n                <TabPanel value=\"2\">\n                    <MyBeerListPage />\n                </TabPanel>\n            </TabContext>\n        </Box>\n    );\n};\n\nexport default BeerListPage;\n"],"names":["CustomWidthTooltip","styled","_ref","className","props","_objectWithoutProperties","_excluded","_jsx","Tooltip","_objectSpread","classes","popper","_defineProperty","concat","tooltipClasses","tooltip","maxWidth","backgroundColor","CustomCard","Card","_templateObject","_taggedTemplateLiteral","_ref2","beers","Grid","container","spacing","children","map","beer","index","item","xs","lg","CardContent","sx","paddingLeft","_jsxs","title","arrow","TransitionComponent","Fade","TransitionProps","timeout","placement","display","paddingTop","justifyContent","Avatar","alt","src","image_url","beerImage","variant","height","width","paddingBottom","Typography","component","name","color","marginTop","tagline","WebkitBoxOrient","WebkitLineClamp","overflow","textOverflow","description","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","perPage","_useState5","_useState6","loading","setLoading","_useState7","_useState8","setBeers","useEffect","fetchAllBeers","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","json","_toConsumableArray","t0","console","error","stop","apply","arguments","Box","CircularProgress","length","_Fragment","BeersList","alignContent","Button","textTransform","onClick","e","KeyboardArrowDownIcon","CustomButton","otherProps","Object","assign","_objectDestructuringEmpty","MuiButton","onClose","onSubmit","open","values","setValues","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleClose","handleValueChange","target","value","Dialog","DialogTitle","DialogContent","border","borderRadius","marginBottom","TextField","id","label","fullWidth","margin","onChange","multiline","rows","DialogActions","paddingRight","marginRight","CustomLink","Link","CustomFixedButton","_templateObject2","_useLocalStorage","local","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","_useLocalStorage2","localBeers","setLocalBeers","myBeers","setMyBeers","_React$useState","React","_React$useState2","setOpen","handleClickOpen","position","direction","alignItems","AddBeer","setValue","typography","TabContext","borderBottom","TabList","event","newValue","Tab","TabPanel","AllBeerListPage","MyBeerListPage"],"sourceRoot":""}